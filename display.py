# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
import sys, os
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtGui import QPixmap
import tkinter as tk
from tkinter import filedialog

from DBNet_pytorch.tools.predict import ocr_detect
from crnn_pytorch.demo import text_rec_batch


class Ui_MainWindow(object):
    origin_path = 'det/input'
    res = ""
    save_dir = ''

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1074, 716)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setEnabled(True)
        self.label_1.setGeometry(QtCore.QRect(40, 40, 484, 366))
        self.label_1.setAutoFillBackground(False)
        self.label_1.setFrameShape(QtWidgets.QFrame.Box)
        self.label_1.setMidLineWidth(0)
        self.label_1.setObjectName("label_1")
        self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_1.setGeometry(QtCore.QRect(110, 420, 300, 50))
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(110, 540, 300, 50))
        self.pushButton_3.setObjectName("pushButton_3")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(470, 440, 551, 191))
        self.textEdit.setObjectName("textEdit")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(540, 40, 484, 366))
        self.label_2.setFrameShape(QtWidgets.QFrame.Box)
        self.label_2.setObjectName("label_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(470, 410, 111, 31))
        self.label.setObjectName("label")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(110, 480, 300, 50))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(110, 600, 300, 50))
        self.pushButton_4.setObjectName("pushButton_4")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(10, 0, 301, 31))
        self.comboBox.setObjectName("comboBox")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: press_it())
        self.pushButton.setGeometry(QtCore.QRect(330, 0, 91, 31))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1074, 26))
        self.menuBar.setObjectName("menuBar")
        self.menu = QtWidgets.QMenu(self.menuBar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menuBar)
        self.menuBar.addAction(self.menu.menuAction())

        self.pushButton_1.clicked.connect(self.task_1)
        self.pushButton_2.clicked.connect(self.task_2)
        self.pushButton_3.clicked.connect(self.task_3)
        self.pushButton_4.clicked.connect(self.task_4)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def press_it():
            img_name = self.comboBox.currentText()
            img_path = self.origin_path + '\\\\' + img_name
            self.label_1.setScaledContents(True)
            self.label_1.setPixmap(QPixmap(img_path))

            res_path = self.save_dir + 'Intermediate\\\\res\\\\' + img_name.replace('.jpg','_result.jpg')
            print(res_path)
            self.label_2.setScaledContents(True)
            self.label_2.setPixmap(QPixmap(res_path))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_1.setText(_translate("MainWindow", "Display1"))
        self.pushButton_1.setText(_translate("MainWindow", "1.选定原始数据"))
        self.pushButton_3.setText(_translate("MainWindow", "3.显示二值图"))
        self.label_2.setText(_translate("MainWindow", "Display1"))
        self.label.setText(_translate("MainWindow", "文字识别结果："))
        self.pushButton_2.setText(_translate("MainWindow", "2.开始检测"))
        self.pushButton_4.setText(_translate("MainWindow", "4.显示文本图"))
        self.pushButton.setText(_translate("MainWindow", "选择完毕"))
        self.menu.setTitle(_translate("MainWindow", "选择图片"))

    # 选择原始数据路径，默认data/input
    def task_1(self):
        root = tk.Tk()
        root.withdraw()
        # 获取文件夹路径
        self.origin_path = filedialog.askdirectory()  # 获得选择好的文件夹
        print("当前路径为：" + self.origin_path)
        content_list = os.listdir(self.origin_path)
        for i in range(len(content_list)):
            self.comboBox.addItem(str(content_list[i]))

    def task_2(self):

        dir1 = 'det'
        file = os.listdir(dir1)
        for i in range(len(file)):
            file[i] = int(file[i][3:])
        # print(file)
        # print(max(file))
        tmp = max(file) + 1
        self.save_dir = "det/det" + str(tmp) + "\\\\"
        print(self.save_dir)

        ocr_detect(self.origin_path, self.save_dir)
        res_tmp = text_rec_batch(self.save_dir)
        for i in range(len(res_tmp)):
            self.res = self.res + str(res_tmp[i]) + '\n'
        self.textEdit.setText(self.res)

    def task_3(self):
        os.startfile(self.save_dir + 'Intermediate\pre')

    def task_4(self):
        os.startfile(self.save_dir + 'output')


if __name__ == '__main__':
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())